@using FancyFix.OA.Areas.Supplier.Models;
@{
    ViewBag.Title = "List";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<SupplierLabel> labelList = ViewBag.label;
}

@section Css{
    <link href="/Content/js/plugins/datatables/bootstrap-table.min.css" rel="stylesheet" />
}

<div class="row">
    <div class="col-xs-12">
        <div class="box-header">
            <h3 class="box-title">供应商列表</h3>
        </div>
        <div class="box">
            <div class="box-body">
                <section class="panel">
                    <div class="layui-form layui-form-pane">

                        &nbsp;&nbsp;
                        <div class="layui-inline">
                            <div class="layui-input-inline">
                                <input type="button" id="importBtn" class="btn bg-orange" value="导入">
                            </div>
                        </div>
                        &nbsp;&nbsp;
                        <div class="layui-inline">
                            <div class="layui-input-inline">
                                <input type="button" id="exportBtn" class="btn bg-orange" value="导出">
                            </div>
                        </div>
                        &nbsp;&nbsp;
                        <div class="layui-inline">
                            <label class="layui-form-label">导出类型</label>
                            <div class="layui-input-inline">
                                <select id="displayid" name="displayid" lay-filter="displayid">
                                    <option value="0">全部</option>
                                    @foreach (var val in Enum.GetValues(typeof(SupplierLabel)))
                                    {
                                        <option value="@((int)val)">@(val.ToString())</option>
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="layui-inline pull-right">
                            <button id="btnSearch" class="btn bg-orange" lay-submit lay-filter="formSearch">查询</button>
                        </div>
                        <div id="toolbar" class="btn-group">
                            <button id="btn_delete" type="button" class="btn btn-default">
                                <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>删除
                            </button>
                        </div>
                        <form id="excelForm" action="list" method="post" enctype="multipart/form-data">
                            <input id="fileEle" name="file" type="file" style="display:none" />
                        </form>
                    </div>
                </section>
                <table id="table" class="table table-bordered table-hover"></table>
            </div>
        </div>
    </div>
</div>
@section Js{
    <script src="/Content/js/plugins/datatables/bootstrap-table.min.js"></script>
    <script src="/Content/js/plugins/datatables/bootstrap-table-zh-CN.js"></script>
    <script src="/Content/js/common/tools.js"></script>
    <script>

        var fun = {
            init: function () {
                $("#importBtn").bind("click", function () {
                    $("#fileEle").trigger("click");
                })
                $("#exportBtn").bind("click", function () {
                    $("#fileEle").trigger("click");
                })

                $("#fileEle").bind("change", function () {
                    excelForm.action = "list";
                    excelForm.submit();
                })
            }
        }
        fun.init();


        

        layui.use(['layer', 'form'], function () {
            var layer = layui.layer;
            var form = layui.form();

            var TableInit = function () {
                var objTable = new Object();
                //初始化Table
                objTable.Init = function () {
                    $table.bootstrapTable({
                        url: '/supplier/suppliermanager/pagelist',
                        method: 'get',
                        toolbar: '#toolbar',                //工具按钮用哪个容器
                        idField: "Id",                      //指定主键列
                        uniqueId: "Id",                     //每一行的唯一标识，一般为主键列
                        height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                        //striped: true,                      //是否显示行间隔色
                        minimumCountColumns: 2,             //最少允许的列数
                        clickToSelect: true,                //是否启用点击选中行
                        cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                        sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                        pagination: true,                   //是否显示分页（*）
                        paginationLoop: false,              //启用分页条无限循环的功能
                        paginationPreText: "上一页",
                        paginationNextText: "下一页",
                        pageNumber: 1,                      //初始化加载第一页，默认第一页
                        pageSize: 10,                       //每页的记录行数（*）
                        pageList: [10, 50, 100],            //可供选择的每页的行数（*）
                        sortable: true,                     //是否启用排序
                        sortOrder: "asc",                   //排序方式
                        sortStable: true,
                        queryParams: objTable.queryParams,  //传递参数（*）
                        //search: true,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                        //searchText: "搜索",                 //初始搜索文字
                        //strictSearch: false,                 //全匹配搜索，否则为模糊搜索
                        //showColumns: true,                  //是否显示所有的列
                        //showRefresh: true,                  //是否显示刷新按钮
                        //showToggle: true,                   //是否显示详细视图和列表视图的切换按钮
                        columns: [{
                            checkbox: true
                        }, {
                            field: 'Code',
                            title: '供应商代码',
                            align: 'center',
                            width: '500px'
                        }, {
                            field: 'Name',
                            title: '供应商名称',
                            align: 'center',
                        }, {
                            field: 'LabelName',
                            title: '标签',
                            align: 'center'
                        }, {
                            title: '操作',
                            align: 'center',
                            formatter: function (v, r, i) {
                                
                                @*@foreach (var val in Enum.GetValues(typeof(SupplierLabel)))
                                {
                                    @Html.DropDownList("myLabel"+r.Id)
                                    //@listSelect+="<option value="+@((int)val)+">@(val.ToString())</option>'
                                }*@

                                return "  <a href=\"javascript:;\" data-id=\"" + r.Id + "\" class=\"btnEdit btn btn-md btn-primary\">编辑</a> <a href=\"javascript:;\" data-id=\"" + r.Id + "\" class=\"btnDel btn btn-md btn-danger\">删除</a>";
                            }
                        }]
                    });
                };

                //得到查询的参数
                objTable.queryParams = function (params) {
                    var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                        pagesize: params.limit,   //页面大小
                        page: params.offset / params.limit + 1,  //页码
                        search: params.search,
                        order: params.order,
                        ordername: params.sort,

                        //自定义参数
                        title: $("#title").val()
                    };
                    return temp;
                };
                return objTable;
            };
            //初始化Table
            new TableInit().Init();

            //监听提交
            form.on('submit(formSearch)', function (data) {
                Reload();
                return false;
            });

            //删除单个产品
            $("#table").on('click', '.btnDel', function () {
                var $this = $(this);
                layer.confirm('确定删除该产品吗？', {
                    btn: ['确定', '取消']
                }, function (index, layero) {
                    var id = $this.data("id");
                    $.post('/supplier/suppliermanager/delete/' + id, function (data) {
                        if (data)
                            Reload();
                        else
                            ShowError('删除失败！');
                    });
                    layer.close(index);
                }, function (index) {
                    layer.close(index);
                });
            });

            //批量删除
            $("#btn_delete").on('click', function () {
                if (CheckSelections()) {
                    layer.confirm('确定删除所选项吗？', {
                        btn: ['确定', '取消']
                    }, function (index, layero) {
                        var list = GetSelections();
                        $.post('/supplier/suppliermanager/deletebatch', { list }, function (data) {
                            if (data)
                                Reload();
                            else
                                ShowError('删除失败！');
                        })
                        layer.close(index);
                    }, function (index) {
                        layer.close(index);
                    });
                }
            });
        })
         
    </script>
}
