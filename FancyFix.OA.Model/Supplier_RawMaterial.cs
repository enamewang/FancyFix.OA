//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;
using Dos.ORM.Common;

namespace FancyFix.OA.Model
{

	/// <summary>
	/// 实体类Supplier_RawMaterial 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Table("Supplier_RawMaterial")]
	[Serializable]
	public partial class Supplier_RawMaterial : Entity 
	{
		#region Model
		private int _Id;
		private string _BU;
		private string _SAPCode;
		private string _Description;
		private string _Category;
		private string _LeadBuyer;
		private int? _VendorId;
		private int? _PriceFrequency;
		private string _Currency;
		private DateTime? _AddDate;
		private int? _AddUserId;
		private DateTime? _LastDate;
		private int? _LastUserId;
		private int? _Display;
		/// <summary>
		/// 
		/// </summary>
		public int Id
		{
			get{ return _Id; }
			set
			{
				this.OnPropertyValueChange(_.Id,_Id,value);
				this._Id=value;
			}
		}
		/// <summary>
		/// 业务部门
		/// </summary>
		public string BU
		{
			get{ return _BU; }
			set
			{
				this.OnPropertyValueChange(_.BU,_BU,value);
				this._BU=value;
			}
		}
		/// <summary>
		/// 原材料代码
		/// </summary>
		public string SAPCode
		{
			get{ return _SAPCode; }
			set
			{
				this.OnPropertyValueChange(_.SAPCode,_SAPCode,value);
				this._SAPCode=value;
			}
		}
		/// <summary>
		/// 采购产品名称
		/// </summary>
		public string Description
		{
			get{ return _Description; }
			set
			{
				this.OnPropertyValueChange(_.Description,_Description,value);
				this._Description=value;
			}
		}
		/// <summary>
		/// 品类
		/// </summary>
		public string Category
		{
			get{ return _Category; }
			set
			{
				this.OnPropertyValueChange(_.Category,_Category,value);
				this._Category=value;
			}
		}
		/// <summary>
		/// 采购负责人
		/// </summary>
		public string LeadBuyer
		{
			get{ return _LeadBuyer; }
			set
			{
				this.OnPropertyValueChange(_.LeadBuyer,_LeadBuyer,value);
				this._LeadBuyer=value;
			}
		}
		/// <summary>
		/// 供应商代码
		/// </summary>
		public int? VendorId
		{
			get{ return _VendorId; }
			set
			{
				this.OnPropertyValueChange(_.VendorId,_VendorId,value);
				this._VendorId=value;
			}
		}
		/// <summary>
		/// 价格频次（月/季度/半年/年/单次）
		/// </summary>
		public int? PriceFrequency
		{
			get{ return _PriceFrequency; }
			set
			{
				this.OnPropertyValueChange(_.PriceFrequency,_PriceFrequency,value);
				this._PriceFrequency=value;
			}
		}
		/// <summary>
		/// 价格单位
		/// </summary>
		public string Currency
		{
			get{ return _Currency; }
			set
			{
				this.OnPropertyValueChange(_.Currency,_Currency,value);
				this._Currency=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public DateTime? AddDate
		{
			get{ return _AddDate; }
			set
			{
				this.OnPropertyValueChange(_.AddDate,_AddDate,value);
				this._AddDate=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? AddUserId
		{
			get{ return _AddUserId; }
			set
			{
				this.OnPropertyValueChange(_.AddUserId,_AddUserId,value);
				this._AddUserId=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public DateTime? LastDate
		{
			get{ return _LastDate; }
			set
			{
				this.OnPropertyValueChange(_.LastDate,_LastDate,value);
				this._LastDate=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? LastUserId
		{
			get{ return _LastUserId; }
			set
			{
				this.OnPropertyValueChange(_.LastUserId,_LastUserId,value);
				this._LastUserId=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? Display
		{
			get{ return _Display; }
			set
			{
				this.OnPropertyValueChange(_.Display,_Display,value);
				this._Display=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.Id;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.Id};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.Id,
				_.BU,
				_.SAPCode,
				_.Description,
				_.Category,
				_.LeadBuyer,
				_.VendorId,
				_.PriceFrequency,
				_.Currency,
				_.AddDate,
				_.AddUserId,
				_.LastDate,
				_.LastUserId,
				_.Display};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._Id,
				this._BU,
				this._SAPCode,
				this._Description,
				this._Category,
				this._LeadBuyer,
				this._VendorId,
				this._PriceFrequency,
				this._Currency,
				this._AddDate,
				this._AddUserId,
				this._LastDate,
				this._LastUserId,
				this._Display};
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","Supplier_RawMaterial");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Id = new Field("Id","Supplier_RawMaterial","Id");
			/// <summary>
			/// 业务部门
			/// </summary>
			public readonly static Field BU = new Field("BU","Supplier_RawMaterial","业务部门");
			/// <summary>
			/// 原材料代码
			/// </summary>
			public readonly static Field SAPCode = new Field("SAPCode","Supplier_RawMaterial","原材料代码");
			/// <summary>
			/// 采购产品名称
			/// </summary>
			public readonly static Field Description = new Field("Description","Supplier_RawMaterial","采购产品名称");
			/// <summary>
			/// 品类
			/// </summary>
			public readonly static Field Category = new Field("Category","Supplier_RawMaterial","品类");
			/// <summary>
			/// 采购负责人
			/// </summary>
			public readonly static Field LeadBuyer = new Field("LeadBuyer","Supplier_RawMaterial","采购负责人");
			/// <summary>
			/// 供应商代码
			/// </summary>
			public readonly static Field VendorId = new Field("VendorId","Supplier_RawMaterial","供应商代码");
			/// <summary>
			/// 价格频次（月/季度/半年/年/单次）
			/// </summary>
			public readonly static Field PriceFrequency = new Field("PriceFrequency","Supplier_RawMaterial","价格频次（月/季度/半年/年/单次）");
			/// <summary>
			/// 价格单位
			/// </summary>
			public readonly static Field Currency = new Field("Currency","Supplier_RawMaterial","价格单位");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field AddDate = new Field("AddDate","Supplier_RawMaterial","AddDate");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field AddUserId = new Field("AddUserId","Supplier_RawMaterial","AddUserId");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field LastDate = new Field("LastDate","Supplier_RawMaterial","LastDate");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field LastUserId = new Field("LastUserId","Supplier_RawMaterial","LastUserId");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Display = new Field("Display","Supplier_RawMaterial","Display");
		}
		#endregion


	}
}

