//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;
using Dos.ORM.Common;

namespace FancyFix.OA.Model
{

	/// <summary>
	/// 实体类Product_Attribute 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Table("Product_Attribute")]
	[Serializable]
	public partial class Product_Attribute : Entity 
	{
		#region Model
		private int _Id;
		private int? _ClassId;
		private string _AttributeName;
		private int? _InputType;
		private string _Unit;
		private string _Remark;
		private bool? _IsRequired;
		private string _DefaultValue;
		private int? _FieldType;
		private int? _Sequence;
		private bool? _IsSort;
		private bool? _IsShow;
		private bool? _IsSpecial;
		/// <summary>
		/// 
		/// </summary>
		public int Id
		{
			get{ return _Id; }
			set
			{
				this.OnPropertyValueChange(_.Id,_Id,value);
				this._Id=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? ClassId
		{
			get{ return _ClassId; }
			set
			{
				this.OnPropertyValueChange(_.ClassId,_ClassId,value);
				this._ClassId=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string AttributeName
		{
			get{ return _AttributeName; }
			set
			{
				this.OnPropertyValueChange(_.AttributeName,_AttributeName,value);
				this._AttributeName=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? InputType
		{
			get{ return _InputType; }
			set
			{
				this.OnPropertyValueChange(_.InputType,_InputType,value);
				this._InputType=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Unit
		{
			get{ return _Unit; }
			set
			{
				this.OnPropertyValueChange(_.Unit,_Unit,value);
				this._Unit=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Remark
		{
			get{ return _Remark; }
			set
			{
				this.OnPropertyValueChange(_.Remark,_Remark,value);
				this._Remark=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public bool? IsRequired
		{
			get{ return _IsRequired; }
			set
			{
				this.OnPropertyValueChange(_.IsRequired,_IsRequired,value);
				this._IsRequired=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string DefaultValue
		{
			get{ return _DefaultValue; }
			set
			{
				this.OnPropertyValueChange(_.DefaultValue,_DefaultValue,value);
				this._DefaultValue=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? FieldType
		{
			get{ return _FieldType; }
			set
			{
				this.OnPropertyValueChange(_.FieldType,_FieldType,value);
				this._FieldType=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? Sequence
		{
			get{ return _Sequence; }
			set
			{
				this.OnPropertyValueChange(_.Sequence,_Sequence,value);
				this._Sequence=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public bool? IsSort
		{
			get{ return _IsSort; }
			set
			{
				this.OnPropertyValueChange(_.IsSort,_IsSort,value);
				this._IsSort=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public bool? IsShow
		{
			get{ return _IsShow; }
			set
			{
				this.OnPropertyValueChange(_.IsShow,_IsShow,value);
				this._IsShow=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public bool? IsSpecial
		{
			get{ return _IsSpecial; }
			set
			{
				this.OnPropertyValueChange(_.IsSpecial,_IsSpecial,value);
				this._IsSpecial=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.Id;
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.Id,
				_.ClassId,
				_.AttributeName,
				_.InputType,
				_.Unit,
				_.Remark,
				_.IsRequired,
				_.DefaultValue,
				_.FieldType,
				_.Sequence,
				_.IsSort,
				_.IsShow,
				_.IsSpecial};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._Id,
				this._ClassId,
				this._AttributeName,
				this._InputType,
				this._Unit,
				this._Remark,
				this._IsRequired,
				this._DefaultValue,
				this._FieldType,
				this._Sequence,
				this._IsSort,
				this._IsShow,
				this._IsSpecial};
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","Product_Attribute");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Id = new Field("Id","Product_Attribute","Id");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field ClassId = new Field("ClassId","Product_Attribute","ClassId");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field AttributeName = new Field("AttributeName","Product_Attribute","AttributeName");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field InputType = new Field("InputType","Product_Attribute","InputType");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Unit = new Field("Unit","Product_Attribute","Unit");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Remark = new Field("Remark","Product_Attribute","Remark");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field IsRequired = new Field("IsRequired","Product_Attribute","IsRequired");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field DefaultValue = new Field("DefaultValue","Product_Attribute","DefaultValue");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field FieldType = new Field("FieldType","Product_Attribute","FieldType");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Sequence = new Field("Sequence","Product_Attribute","Sequence");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field IsSort = new Field("IsSort","Product_Attribute","IsSort");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field IsShow = new Field("IsShow","Product_Attribute","IsShow");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field IsSpecial = new Field("IsSpecial","Product_Attribute","IsSpecial");
		}
		#endregion


	}
}

