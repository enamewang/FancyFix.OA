//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;
using Dos.ORM.Common;

namespace FancyFix.OA.Model
{

	/// <summary>
	/// 实体类Config_Process 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Table("Config_Process")]
	[Serializable]
	public partial class Config_Process : Entity 
	{
		#region Model
		private int _Id;
		private int? _Year;
		private string _Process;
		private int? _Type;
		/// <summary>
		/// 
		/// </summary>
		public int Id
		{
			get{ return _Id; }
			set
			{
				this.OnPropertyValueChange(_.Id,_Id,value);
				this._Id=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? Year
		{
			get{ return _Year; }
			set
			{
				this.OnPropertyValueChange(_.Year,_Year,value);
				this._Year=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Process
		{
			get{ return _Process; }
			set
			{
				this.OnPropertyValueChange(_.Process,_Process,value);
				this._Process=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? Type
		{
			get{ return _Type; }
			set
			{
				this.OnPropertyValueChange(_.Type,_Type,value);
				this._Type=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.Id;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.Id};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.Id,
				_.Year,
				_.Process,
				_.Type};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._Id,
				this._Year,
				this._Process,
				this._Type};
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","Config_Process");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Id = new Field("Id","Config_Process","Id");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Year = new Field("Year","Config_Process","Year");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Process = new Field("Process","Config_Process","Process");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Type = new Field("Type","Config_Process","Type");
		}
		#endregion


	}
}

