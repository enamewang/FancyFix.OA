//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;
using Dos.ORM.Common;

namespace FancyFix.OA.Model
{

	/// <summary>
	/// 实体类Product_Class 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Table("Product_Class")]
	[Serializable]
	public partial class Product_Class : Entity 
	{
		#region Model
		private int _Id;
		private int? _ParId;
		private string _ParPath;
		private string _ClassName;
		private int? _Sequence;
		private int? _Depth;
		private int? _ChildNum;
		private string _UrlPath;
		private string _Description;
		private bool? _BeLock;
		private string _Pics;
		private string _FirstPic;
		private string _Code;
		/// <summary>
		/// 自增Id
		/// </summary>
		public int Id
		{
			get{ return _Id; }
			set
			{
				this.OnPropertyValueChange(_.Id,_Id,value);
				this._Id=value;
			}
		}
		/// <summary>
		/// 父级Id
		/// </summary>
		public int? ParId
		{
			get{ return _ParId; }
			set
			{
				this.OnPropertyValueChange(_.ParId,_ParId,value);
				this._ParId=value;
			}
		}
		/// <summary>
		/// 分类路径
		/// </summary>
		public string ParPath
		{
			get{ return _ParPath; }
			set
			{
				this.OnPropertyValueChange(_.ParPath,_ParPath,value);
				this._ParPath=value;
			}
		}
		/// <summary>
		/// 分类名
		/// </summary>
		public string ClassName
		{
			get{ return _ClassName; }
			set
			{
				this.OnPropertyValueChange(_.ClassName,_ClassName,value);
				this._ClassName=value;
			}
		}
		/// <summary>
		/// 排序
		/// </summary>
		public int? Sequence
		{
			get{ return _Sequence; }
			set
			{
				this.OnPropertyValueChange(_.Sequence,_Sequence,value);
				this._Sequence=value;
			}
		}
		/// <summary>
		/// 深度
		/// </summary>
		public int? Depth
		{
			get{ return _Depth; }
			set
			{
				this.OnPropertyValueChange(_.Depth,_Depth,value);
				this._Depth=value;
			}
		}
		/// <summary>
		/// 子分类数
		/// </summary>
		public int? ChildNum
		{
			get{ return _ChildNum; }
			set
			{
				this.OnPropertyValueChange(_.ChildNum,_ChildNum,value);
				this._ChildNum=value;
			}
		}
		/// <summary>
		/// Url
		/// </summary>
		public string UrlPath
		{
			get{ return _UrlPath; }
			set
			{
				this.OnPropertyValueChange(_.UrlPath,_UrlPath,value);
				this._UrlPath=value;
			}
		}
		/// <summary>
		/// 描述
		/// </summary>
		public string Description
		{
			get{ return _Description; }
			set
			{
				this.OnPropertyValueChange(_.Description,_Description,value);
				this._Description=value;
			}
		}
		/// <summary>
		/// 是否锁定
		/// </summary>
		public bool? BeLock
		{
			get{ return _BeLock; }
			set
			{
				this.OnPropertyValueChange(_.BeLock,_BeLock,value);
				this._BeLock=value;
			}
		}
		/// <summary>
		/// 图片
		/// </summary>
		public string Pics
		{
			get{ return _Pics; }
			set
			{
				this.OnPropertyValueChange(_.Pics,_Pics,value);
				this._Pics=value;
			}
		}
		/// <summary>
		/// 封面图
		/// </summary>
		public string FirstPic
		{
			get{ return _FirstPic; }
			set
			{
				this.OnPropertyValueChange(_.FirstPic,_FirstPic,value);
				this._FirstPic=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Code
		{
			get{ return _Code; }
			set
			{
				this.OnPropertyValueChange(_.Code,_Code,value);
				this._Code=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.Id;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.Id};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.Id,
				_.ParId,
				_.ParPath,
				_.ClassName,
				_.Sequence,
				_.Depth,
				_.ChildNum,
				_.UrlPath,
				_.Description,
				_.BeLock,
				_.Pics,
				_.FirstPic,
				_.Code};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._Id,
				this._ParId,
				this._ParPath,
				this._ClassName,
				this._Sequence,
				this._Depth,
				this._ChildNum,
				this._UrlPath,
				this._Description,
				this._BeLock,
				this._Pics,
				this._FirstPic,
				this._Code};
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","Product_Class");
			/// <summary>
			/// 自增Id
			/// </summary>
			public readonly static Field Id = new Field("Id","Product_Class","自增Id");
			/// <summary>
			/// 父级Id
			/// </summary>
			public readonly static Field ParId = new Field("ParId","Product_Class","父级Id");
			/// <summary>
			/// 分类路径
			/// </summary>
			public readonly static Field ParPath = new Field("ParPath","Product_Class","分类路径");
			/// <summary>
			/// 分类名
			/// </summary>
			public readonly static Field ClassName = new Field("ClassName","Product_Class","分类名");
			/// <summary>
			/// 排序
			/// </summary>
			public readonly static Field Sequence = new Field("Sequence","Product_Class","排序");
			/// <summary>
			/// 深度
			/// </summary>
			public readonly static Field Depth = new Field("Depth","Product_Class","深度");
			/// <summary>
			/// 子分类数
			/// </summary>
			public readonly static Field ChildNum = new Field("ChildNum","Product_Class","子分类数");
			/// <summary>
			/// Url
			/// </summary>
			public readonly static Field UrlPath = new Field("UrlPath","Product_Class","Url");
			/// <summary>
			/// 描述
			/// </summary>
			public readonly static Field Description = new Field("Description","Product_Class","描述");
			/// <summary>
			/// 是否锁定
			/// </summary>
			public readonly static Field BeLock = new Field("BeLock","Product_Class","是否锁定");
			/// <summary>
			/// 图片
			/// </summary>
			public readonly static Field Pics = new Field("Pics","Product_Class","图片");
			/// <summary>
			/// 封面图
			/// </summary>
			public readonly static Field FirstPic = new Field("FirstPic","Product_Class","封面图");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Code = new Field("Code","Product_Class","Code");
		}
		#endregion


	}
}

