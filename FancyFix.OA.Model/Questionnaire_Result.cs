//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//     Website: http://ITdos.com/Dos/ORM/Index.html
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------


using System;
using System.Data;
using System.Data.Common;
using Dos.ORM;
using Dos.ORM.Common;

namespace FancyFix.OA.Model
{

	/// <summary>
	/// 实体类Questionnaire_Result 。(属性说明自动提取数据库字段的描述信息)
	/// </summary>
	[Table("Questionnaire_Result")]
	[Serializable]
	public partial class Questionnaire_Result : Entity 
	{
		#region Model
		private int _Id;
		private int? _SubjectId;
		private string _Question;
		private string _Answer;
		private int? _Score;
		private string _Result;
		private bool? _IsRight;
		private int? _AnswererId;
		/// <summary>
		/// 
		/// </summary>
		public int Id
		{
			get{ return _Id; }
			set
			{
				this.OnPropertyValueChange(_.Id,_Id,value);
				this._Id=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? SubjectId
		{
			get{ return _SubjectId; }
			set
			{
				this.OnPropertyValueChange(_.SubjectId,_SubjectId,value);
				this._SubjectId=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Question
		{
			get{ return _Question; }
			set
			{
				this.OnPropertyValueChange(_.Question,_Question,value);
				this._Question=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Answer
		{
			get{ return _Answer; }
			set
			{
				this.OnPropertyValueChange(_.Answer,_Answer,value);
				this._Answer=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? Score
		{
			get{ return _Score; }
			set
			{
				this.OnPropertyValueChange(_.Score,_Score,value);
				this._Score=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public string Result
		{
			get{ return _Result; }
			set
			{
				this.OnPropertyValueChange(_.Result,_Result,value);
				this._Result=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public bool? IsRight
		{
			get{ return _IsRight; }
			set
			{
				this.OnPropertyValueChange(_.IsRight,_IsRight,value);
				this._IsRight=value;
			}
		}
		/// <summary>
		/// 
		/// </summary>
		public int? AnswererId
		{
			get{ return _AnswererId; }
			set
			{
				this.OnPropertyValueChange(_.AnswererId,_AnswererId,value);
				this._AnswererId=value;
			}
		}
		#endregion

		#region Method
		/// <summary>
		/// 获取实体中的标识列
		/// </summary>
		public override Field GetIdentityField()
		{
			return _.Id;
		}
		/// <summary>
		/// 获取实体中的主键列
		/// </summary>
		public override Field[] GetPrimaryKeyFields()
		{
			return new Field[] {
				_.Id};
		}
		/// <summary>
		/// 获取列信息
		/// </summary>
		public override Field[] GetFields()
		{
			return new Field[] {
				_.Id,
				_.SubjectId,
				_.Question,
				_.Answer,
				_.Score,
				_.Result,
				_.IsRight,
				_.AnswererId};
		}
		/// <summary>
		/// 获取值信息
		/// </summary>
		public override object[] GetValues()
		{
			return new object[] {
				this._Id,
				this._SubjectId,
				this._Question,
				this._Answer,
				this._Score,
				this._Result,
				this._IsRight,
				this._AnswererId};
		}
		#endregion

		#region _Field
		/// <summary>
		/// 字段信息
		/// </summary>
		public class _
		{
			/// <summary>
			/// * 
			/// </summary>
			public readonly static Field All = new Field("*","Questionnaire_Result");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Id = new Field("Id","Questionnaire_Result","Id");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field SubjectId = new Field("SubjectId","Questionnaire_Result","SubjectId");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Question = new Field("Question","Questionnaire_Result","Question");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Answer = new Field("Answer","Questionnaire_Result","Answer");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Score = new Field("Score","Questionnaire_Result","Score");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field Result = new Field("Result","Questionnaire_Result","Result");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field IsRight = new Field("IsRight","Questionnaire_Result","IsRight");
			/// <summary>
			/// 
			/// </summary>
			public readonly static Field AnswererId = new Field("AnswererId","Questionnaire_Result","AnswererId");
		}
		#endregion


	}
}

